server:
  port: 8090

spring:
  application:
    name: auth
  datasource:
    url: jdbc:postgresql://localhost:54322/projectmanagerauthdb
    username: devuser
    password: devpassword
    hikari:
      maximum-pool-size: 50
      minimum-idle: 5
      idle-timeout: 1000
      max-lifetime: 600000
      connection-timeout: 30000

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        format_sql: true
    show_sql: true
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${BACKEND_OAUTH2_GOOGLE_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_GOOGLE_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            client-id: ${BACKEND_OAUTH2_FACEBOOK_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_FACEBOOK_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            client-id: ${BACKEND_OAUTH2_GITHUB_CLIENT_ID}
            client-secret: ${BACKEND_OAUTH2_GITHUB_CLIENT_SECRET}
            redirect-uri: "${BACKEND_OAUTH2_CALLBACK_URI}/{registrationId}"
            scope:
              - user:email
              - read:user

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true

logging:
  level:
    root: info
#    org.springframework.web: trace
#    org.hibernate: trace
#    org.hibernate.type.descriptor.sql: trace
#    org.springframework.transaction: trace
#    org.springframework.security: trace
#    org.springframework.mail: trace